{
  // Environment variables don't load properly otherwise
  // See: https://github.com/microsoft/vscode-python/issues/944#issuecomment-808516207
  "terminal.integrated.defaultProfile.linux": "pwsh",

  //! Pylance
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "strict",
  "python.analysis.indexing": true,
  "python.analysis.persistAllIndices": true,
  //? See "include" and "extrapaths" in pyrightconfig.json
  "python.analysis.autoSearchPaths": false,
  //? Helpers
  "python.analysis.autoFormatStrings": true,
  "python.analysis.completeFunctionParens": true,
  "python.analysis.gotoDefinitionInStringLiteral": true,
  //? Related autoformatting and format on save settings
  "editor.formatOnType": true,
  "editor.formatOnSave": true,
  "notebook.formatOnCellExecution": true,
  "notebook.formatOnSave.enabled": true,
  //? Related autoformatting of whitespace conventions
  //? Note that notebook cells gain new lines and it can't be stopped for now.
  //? https://github.com/microsoft/vscode/issues/195223
  //? https://github.com/microsoft/vscode/issues/195011
  "files.eol": "\n",
  "files.refactoring.autoSave": true,
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,
  //? Refactoring
  //? https://code.visualstudio.com/updates/v1_83#_code-actions-on-save-and-auto-save
  "python.analysis.fixAll": [
    "source.convertImportFormat",
    "source.unusedImports"
  ],
  "editor.codeActionsOnSave": {
    "source.organizeImports": "always",
    "source.fixAll": "always"
  },
  "notebook.codeActionsOnSave": {
    "source.organizeImports": "explicit",
    "source.fixAll": "explicit"
  },
  //? Auto imports
  "python.analysis.importFormat": "absolute",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.extraCommitChars": true,
  "python.analysis.addImport.exactMatchOnly": false,
  //? Inlay hints
  "editor.inlayHints.enabled": "offUnlessPressed",
  "python.analysis.inlayHints.callArgumentNames": "all",
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.inlayHints.variableTypes": true,
  "python.analysis.inlayHints.pytestParameters": true,

  //! Lint, test, format
  //* pytest
  "python.testing.unittestEnabled": false,
  "python.testing.pytestEnabled": true,
  //* ruff
  "ruff.importStrategy": "fromEnvironment",
  "ruff.format.args": [],
  "ruff.lint.args": [],

  //! GitHub Actions
  "github-actions.workflows.pinned.workflows": [".github/workflows/main.yml"],

  //! Files
  //* Excludes
  "files.exclude": {
    "**/__pycache__": true,
    "**/.cache": true,
    "**/.jupyter_cache": true,
    "**/.pytest_cache/": true,
    //? Pylance temp files get picked up in Problems pane before deletion
    "**/*pylance-notebook-cell*": true
  },
  "search.exclude": {
    "submodules": true
  },
  //* File nesting
  "explorer.sortOrder": "foldersNestsFiles",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "*.root": ".*, a*, b*, c*, d*, e*, f*, g*, h*, i*, j*, k*, l*, m*, n*, o*, p*, q*, r*, s*, t*, u*, v*, w*, x*, y*, z*, 0*, 1*, 2*, 3*, 4*, 5*, 6*, 7*, 8*, 9*, _*, -*, {*"
  },
  //* File associations
  "files.associations": {
    ".coveragerc": "ini",
    ".env": "dotenv",
    ".pylintrc": "ini",
    ".root": "plaintext",
    ".sourcery.yaml": "yaml",
    "*requirements*.txt": "pip-requirements",
    "*ipython-input*": "python",
    "pyrightconfig.json": "jsonc"
  },
  //* File icon associations
  "workbench.iconTheme": "vscode-icons",
  "vsicons.presets.hideExplorerArrows": true,
  "vsicons.dontShowNewVersionMessage": false,

  //! Built-in
  //* Markdown editor moves jarringly when this is "true"
  "markdown.preview.scrollEditorWithPreview": false,

  //! Line-width
  //* Formatting
  "rewrap.wrappingColumn": 88,
  "rewrap.wholeComment": false,
  //* Don't validate the body of a commit. Assume people can wrap it in their IDE.
  "git.inputValidationSubjectLength": 88,
  "git.inputValidationLength": 1e100,
  //* Default wrapping
  "editor.wordWrapColumn": 88,
  "editor.rulers": [88],

  //! Filetype specifics
  //* .ENV
  "[dotenv]": {
    "editor.wordWrap": "bounded",
    "rewrap.autoWrap.enabled": false
  },
  //* MD
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
    "editor.wordWrap": "bounded",
    "rewrap.autoWrap.enabled": false
  },
  //* JSON
  "[json]": {
    "editor.wordWrap": "bounded",
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.wordWrap": "bounded",
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  //* PYTHON
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  //* IPYNB
  "[ipynb]": {
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  //* TXT
  "[plaintext]": {
    "editor.wordWrap": "bounded"
  },
  //* TOML
  "evenBetterToml.formatter.columnWidth": 88,
  "[toml]": {
    "editor.wordWrap": "bounded",
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  //* TSV
  "[tsv]": {
    //? Indent with tabs
    "editor.insertSpaces": false
  },
  //* YAML
  "yaml.format.printWidth": 88,
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "bounded"
  },

  //! Extension: Jupyter Notebooks
  "jupyter.notebookFileRoot": "${workspaceFolder}",
  "jupyter.showVariableViewWhenDebugging": true
}
