{
  // * -------------------------------------------------------------------------- * //
  // * PROJECT-SPECIFIC * //

  // Environment variables don't load properly otherwise
  // See: https://github.com/microsoft/vscode-python/issues/944#issuecomment-808516207
  "terminal.integrated.defaultProfile.linux": "pwsh",

  //! Pylance
  //* Pylance settings aren't very discoverable.
  //* https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance
  "python.languageServer": "Pylance",
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.indexing": true,
  //? See "include" and "extrapaths" in pyrightconfig.json
  "python.analysis.autoSearchPaths": false,
  //? See "useLibraryCodeForTypes" in pyrightconfig.json
  "python.analysis.typeCheckingMode": "off",

  //! Lint, test

  //* flake8
  "python.linting.enabled": true,
  "python.linting.flake8Enabled": true,
  "python.linting.flake8Args": ["--config", ".flake8"],

  //* pytest
  "python.testing.unittestEnabled": false,
  "python.testing.pytestEnabled": true,
  "python.testing.pytestArgs": ["-c", "pytest_local.ini"],

  //* markdownlint
  "markdownlint.config": {
    "first-line-heading": false
  },

  //! GitHub Actions
  "github-actions.workflows.pinned.workflows": [".github/workflows/main.yml"],

  //! Shell Launcher
  "shellLauncher.shells.windows": [
    {
      //* Launches IPython in the virtual environment. Lets you try things out in without having to fire up an entire Jupyter notebook.
      //*
      //* Use alongside the following keybind in your "keybindings.json".
      //*
      //? {
      //?   "key": "ctrl+alt+1",
      //?   "command": "shellLauncher.launch"
      //? },
      "label": "IPython (.venv)",
      "shell": "pwsh.exe",
      "args": ["-NoExit", "-Command", "python", "-m", "IPython"]
    }
  ],

  //! Files

  //* Experimental file nesting
  "explorer.sortOrder": "foldersNestsFiles",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock",
    ".nest_tools_config": "coverage.xml, setup.ps1, update.ps1, *.code-workspace, *.prof, .copier-answers.yml, .coverage, .coveragerc, .env, .flake8, .gitattributes, .isort.cfg, .pre-commit-config.yaml, .pytest_cache, .sourcery.yaml, codecov.yml, package.json, pyrightconfig.json, pytest.ini, pytest_local.ini, pythonrc.py, renovate.json",
    ".nest_md": "*.md, LICENSE"
  },

  //* File associations
  "files.associations": {
    ".coveragerc": "ini",
    ".env": "dotenv",
    ".pylintrc": "ini",
    "pyrightconfig.json": "jsonc",
    "*requirements*.txt": "pip-requirements",
    ".nest_md": "plaintext",
    ".nest_tools_config": "plaintext",
    ".sourcery.yaml": "yaml"
  },

  //* File icon associations
  "workbench.iconTheme": "vscode-icons",
  "vsicons.presets.hideExplorerArrows": true,
  "vsicons.dontShowNewVersionMessage": false,
  "vsicons.associations.files": [
    { "icon": "ini", "extensions": ["nest_tools_config"], "format": "svg" },
    { "icon": "markdown", "extensions": ["nest_md"], "format": "svg" }
  ],

  // * -------------------------------------------------------------------------- * //
  // * GENERAL * //

  //! Built-in

  //* Enable native bracket pair colorization
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,

  //* Format on save. Adjust CTRL+[SHIFT/ALT]+S in "keybindings.json" as well
  "editor.formatOnSave": true,

  //* Enforce whitespace and newlines.
  //? Automatically enforce whitespace conventions.
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,

  //* Periodically fetch changes to tracked repo. Don't confirm on push/pull.
  "git.autofetch": true,
  "git.confirmSync": false,

  //* Markdown editor moves jarringly when this is "true"
  "markdown.preview.scrollEditorWithPreview": false,

  //* Show line numbers in notebooks
  "notebook.lineNumbers": "on",

  //* Unify *.ipynb working directory with typical/default *.py working directory
  "jupyter.notebookFileRoot": "${workspaceFolder}",

  //! Line-width

  //* Formatting
  "python.formatting.provider": "black",
  "rewrap.wrappingColumn": 88,
  "rewrap.wholeComment": false,

  //* Don't validate the body of a commit. Assume people can wrap it in their IDE.
  "git.inputValidationSubjectLength": 88,
  "git.inputValidationLength": 1e100,

  //* Default wrapping
  "editor.wordWrapColumn": 88,
  "editor.rulers": [88],

  //! Filetype specifics (incl. line width)

  //* MD
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
    "editor.wordWrap": "wordWrapColumn",
    //? Roughly matches the width of GitHub Markdown
    "editor.wordWrapColumn": 124,
    "editor.rulers": [124],
    "rewrap.autoWrap.enabled": false
  },

  //* JSON
  "[json]": {
    "editor.wordWrap": "wordWrapColumn",
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.wordWrap": "wordWrapColumn",
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  //* TXT
  "[plaintext]": {
    "editor.wordWrap": "wordWrapColumn"
  },

  //* TOML
  "evenBetterToml.formatter.columnWidth": 88,
  "[toml]": {
    "editor.wordWrap": "wordWrapColumn",
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },

  //* TSV
  "[tsv]": {
    //? Indent with tabs
    "editor.insertSpaces": false
  },

  //* YAML
  "yaml.format.printWidth": 88,
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.wordWrap": "wordWrapColumn"
  }
}
